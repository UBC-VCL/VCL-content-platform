{"version":3,"sources":["redux/store.ts","redux/slices/AppRedux.ts","redux/slices/AuthRedux.ts","redux/slices/ProjectRedux.ts","statics/routes.ts","statics/constants.ts","statics/text.ts","statics/nav.ts","services/adapters/authAdapter.ts","redux/hooks.ts","services/authService.ts","components/generics/Link/Link.tsx","components/Navbar/Navbar.tsx","services/api/projectAPI.ts","services/adapters/projectAdapter.ts","components/AlertPopup/AlertPopup.tsx","pages/Timeline/Timeline.tsx","components/Card/Card.tsx","pages/Home/Home.tsx","statics/projectNav.ts","components/ProjectNavbar/ProjectNavbar.tsx","pages/Project/ProjectWrapper.tsx","pages/Project/ProjectOverview.tsx","components/ProjectBreadcrumbs/ProjectBreadcrumbs.tsx","pages/Project/ProjectDefault.tsx","pages/Project/ProjectJoin.tsx","pages/Project/ProjectResources.tsx","pages/Project/ProjectTeam.tsx","pages/Project/ProjectContact.tsx","pages/About/About.tsx","pages/Resources/Resources.tsx","App/Switch.tsx","components/generics/Modal/Modal.tsx","components/generics/Button/Button.tsx","components/LoginView/LoginForm/LoginForm.tsx","components/LoginView/LoginView.tsx","App/Modals.tsx","components/Footer/Footer.tsx","App/App.tsx","services/projectService.ts","reportWebVitals.ts","index.tsx"],"names":["key","blacklist","appSlice","createSlice","name","initialState","isReady","modals","login","visible","alert","reducers","setIsReady","state","payload","openModal","data","closeModal","setAlert","selectApp","app","appActions","actions","authSlice","permissions","isLoggingIn","setAccessToken","access_token","setRefreshToken","refresh_token","setUsername","username","setPermissions","logout","undefined","setIsLoggingIn","selectAuth","auth","selectIsLoggedIn","Boolean","selectIsLoggingIn","authActions","projectSlice","isProjectLoading","projects","setIsProjectLoading","setProjects","addProject","push","removeProject","index","map","e","indexOf","splice","selectProjects","project","projectActions","rootReducer","combineReducers","appReducer","persistReducer","storage","authReducer","projectReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ROUTES","HOME","PROJECT","PATH","BASE","OVERVIEW","TIMELINE","ABOUT","RESOURCES","PROJECT_DESCRIPTION","JOIN_THE_TEAM","TEAM","CONTACT","constants","MIN_PASSWORD_LENGTH","MIN_USERNAME_LENGTH","MODALS","LOGIN","TEXT","COMMON","SUBMIT","BACK","NEXT","TITLE","LOGOUT","USERNAME","USERNAME_EMPTY_ERROR","USERNAME_LENGTH_ERROR","PASSWORD","PASSWORD_EMPTY_ERROR","PASSWORD_LENGTH_ERROR","PAGE_TITLES","NAVIGATE","PROJECTS","PROJECT_NAV","ALERTS","AUTH_SUCCESS","AUTH_FAILED","LOGIN_SUCCESS","LOGOUT_SUCCESS","LAB_INFO","TEL","FAX","EMAIL","DRRENSINK_CONTACT","CAMPUS","NAV","REF","dotenv","config","baseURL","process","REACT_APP_API_URL","loginUser","password","a","axios","post","res","response","checkAuth","get","headers","authorization","logoutUser","useAppDispatch","useDispatch","useAppSelector","useSelector","useHandleCheckAuth","dispatch","React","useEffect","then","catch","console","error","GenericLink","props","to","className","Fragment","Navbar","location","useLocation","useHandleLogout","isLoggedIn","useState","anchorEl","setAnchorEl","handleMenuClose","projectAnchorEl","setProjectAnchorEl","projectOpen","handleProjectMenuClick","event","currentTarget","handleProjectMenuClose","renderedLinks","active","pathname","Button","id","onClick","aria-controls","aria-haspopup","aria-expanded","style","textTransform","Menu","open","onClose","MenuListProps","MenuItem","i","AppBar","position","Toolbar","Typography","IconButton","CONSTANTS","ProjectAPI","callGetAllProjectsAPI","projectAPI","getAllProjects","AlertPopup","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","aria-label","color","Timeline","Card","title","desc","fontSize","Home","ProjectNavbar","Drawer","variant","anchor","isOpen","PaperProps","List","links","link","ListItem","button","component","Link","ref","ListItemText","primary","ProjectWrapper","match","selected","setSelected","expand","curr_project","find","params","project_id","project_nav","join","ToggleButton","value","onChange","exact","path","url","render","ProjectResources","ProjectOverview","ProjectBreadcrumbs","Breadcrumbs","separator","href","underline","project_name","page_name","ProjectDefault","ProjectJoin","ProjectTeam","ProjectContact","About","Resources","AppSwitch","ModalWrapper","modalKey","modal","injectedProps","modalData","Modal","disableDefaultClose","cloneElement","children","GenericButton","rest","classes","classNames","LoginForm","schema","useMemo","yup","required","form","useFormik","initialValues","validationSchema","onSubmit","values","handleSubmit","TextField","label","handleChange","onBlur","handleBlur","touched","errors","helperText","type","disableElevation","disabled","LoginView","isFetching","setIsFetching","setError","success","setSuccess","handleLogin","useHandleLogin","user","pwd","LoginModal","Modals","Footer","src","App","handleGetAllProjects","useHandleGetAllProjects","Switch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"qXAW6BA,EAAaC,E,6FCiB7BC,EAAWC,YAAY,CAClCC,KAAM,MACNC,aAZ6B,CAC7BC,SAAS,EACTC,OAAQ,CACNC,MAAO,CACLC,SAAS,IAGbC,MAAO,MAMPC,SAAU,CACRC,WAAY,SAACC,EAAD,GAAiD,IAAvCC,EAAsC,EAAtCA,QACpBD,EAAMP,QAAUQ,GAElBC,UAAW,SACTF,EADS,GAQL,IALFC,EAKC,EALDA,QAMFD,EAAMN,OAAOO,EAAQd,KAAO,CAC1BS,SAAS,EACTO,KAAMF,EAAQE,OAGlBC,WAAY,SACVJ,EADU,GAGN,IADFC,EACC,EADDA,QAEFD,EAAMN,OAAOO,EAAQd,KAAO,CAC1BS,SAAS,EACTO,KAAMF,EAAQE,OAGlBE,SAAU,SAACL,EAAD,GAAuD,IAA7CC,EAA4C,EAA5CA,QAClBD,EAAMH,MAAQI,MAKPK,EAAY,SAACN,GAAD,OAAsBA,EAAMO,KAIxCC,EAAanB,EAASoB,QACpBpB,IAAf,QCpDaqB,EAAYpB,YAAY,CACnCC,KAAM,OACNC,aAP8B,CAC9BmB,YAAa,UACbC,aAAa,GAMbd,SAAU,CACRe,eAAgB,SAACb,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QACxBD,EAAMc,aAAeb,GAEvBc,gBAAiB,SAACf,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QACzBD,EAAMgB,cAAgBf,GAExBgB,YAAa,SAACjB,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QACrBD,EAAMkB,SAAWjB,GAEnBkB,eAAgB,SAACnB,EAAD,GAAkD,IAAxCC,EAAuC,EAAvCA,QACxBD,EAAMW,YAAcV,GAEtBmB,OAAQ,SAACpB,GACPA,EAAMkB,cAAWG,EACjBrB,EAAMc,kBAAeO,EACrBrB,EAAMgB,mBAAgBK,EACtBrB,EAAMW,YAAc,WAEtBW,eAAgB,SAACtB,EAAD,GAAiD,IAAvCC,EAAsC,EAAtCA,QACxBD,EAAMY,YAAcX,MAKbsB,EAAa,SAACvB,GAAD,OAAsBA,EAAMwB,MACzCC,EAAmB,SAACzB,GAAD,OAC9B0B,QAAQ1B,EAAMwB,KAAKR,gBACRW,EAAoB,SAAC3B,GAAD,OAAsBA,EAAMwB,KAAKZ,aAErDgB,EAAclB,EAAUD,QACtBC,IAAf,QCrCamB,EAAevC,YAAY,CACpCC,KAAM,UACNC,aAP+B,CAC/BsC,kBAAkB,EAClBC,SAAU,IAMVjC,SAAU,CACNkC,oBAAqB,SAAChC,EAAD,GAAiD,IAAvCC,EAAsC,EAAtCA,QAC3BD,EAAM8B,iBAAmB7B,GAE7BgC,YAAa,SAACjC,EAAD,GAAmD,IAAzCC,EAAwC,EAAxCA,QACnBD,EAAM+B,SAAW9B,GAErBiC,WAAY,SAAClC,EAAD,GAAiD,IAAvCC,EAAsC,EAAtCA,QAClBD,EAAM+B,SAASI,KACXlC,IAGRmC,cAAe,SAACpC,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QACjBoC,EAAQrC,EAAM+B,SAASO,KAAI,SAACC,GAAD,OAAOA,EAAEhD,QAAMiD,QAAQvC,IACvC,IAAXoC,GACArC,EAAM+B,SAASU,OAAOJ,OAOzBK,EAAiB,SAAC1C,GAAD,OAAsBA,EAAM2C,QAAQZ,UAGrDa,EAAiBf,EAAapB,QAC5BoB,IAAf,QH1BMgB,EAAcC,YAAgB,CAClCvC,IAAKwC,EACLvB,KAAMwB,aARqB7D,EAQc,OARyB,CAClEA,MACA8D,YACA7D,cAKkD8D,GAClDP,QAASQ,IAGEC,EAAQC,YAAe,CAClCC,QAAST,EACTU,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,mBAAmB,OAIZC,EAAYC,YAAaP,G,kHIfvBQ,EAhBA,CACbC,KAAM,IACNC,QAAS,CACPC,KAAM,yBACNC,KAAM,YACNC,SAAU,sBAEZC,SAAU,YACVC,MAAO,SACPC,UAAW,aACXC,oBAAqB,IACrBC,cAAe,QACfC,KAAM,QACNC,QAAS,YCJIC,EATG,CAChBC,oBAAqB,EACrBC,oBAAqB,EAErBC,OAAQ,CACNC,MAAO,UCoDIC,EAvDF,CACXC,OAAQ,CACNC,OAAQ,SACRC,KAAM,OACNC,KAAM,OACNC,MAAO,2BACPN,MAAO,QACPO,OAAQ,UAGVP,MAAO,CACLM,MACE,iFACFE,SAAU,WACVC,qBAAsB,uBACtBC,sBAAsB,WAAD,OAAad,EAAUE,oBAAvB,eACrBa,SAAU,WACVC,qBAAsB,uBACtBC,sBAAsB,WAAD,OAAajB,EAAUC,oBAAvB,gBAGvBiB,YAAa,CACXC,SAAU,WACV/B,KAAM,OACNK,SAAU,WACV2B,SAAU,WACV5B,SAAU,WACVE,MAAO,QACPC,UAAW,aAGb0B,YAAa,CACTzB,oBAAqB,sBACrBC,cAAe,gBACfF,UAAW,YACXG,KAAM,OACNC,QAAS,WAGbuB,OAAQ,CACNC,aAAc,6BACdC,YAAa,yBACbC,cAAe,0BACfC,eAAgB,4BAGlBC,SAAU,CACNC,IAAK,eACLC,IAAK,eACLC,MAAO,uBACPC,kBAAmB,uBACnBC,OAAQ,qBC3BCC,EAvBH,CACX,CACCvB,MAAOL,EAAKa,YAAY9B,KACxB8C,IAAK/C,EAAOC,MAEb,CACCsB,MAAOL,EAAKa,YAAYzB,SACxByC,IAAK/C,EAAOM,UAEb,CACCiB,MAAOL,EAAKa,YAAYE,SACxBc,IAAK/C,EAAOE,QAAQE,MAErB,CACCmB,MAAOL,EAAKa,YAAYxB,MACxBwC,IAAK/C,EAAOO,OAEb,CACCgB,MAAOL,EAAKa,YAAYvB,UACxBuC,IAAK/C,EAAOQ,Y,8DClBdwC,KAAOC,SACP,IAAMC,GAAUC,wJAAYC,kBAafC,GAAS,uCAAG,WACvB/F,EACAgG,GAFuB,eAAAC,EAAA,+EAKHC,IAAMC,KACtB,mBACA,CACEnG,WACAgG,YAEF,CACEJ,aAZiB,cAKfQ,EALe,yBAgBdA,EAAInH,MAhBU,yDAkBd,KAAIoH,SAASpH,MAlBC,yDAAH,wDA4BTqH,GAAS,uCAAG,WACvBxG,GADuB,eAAAmG,EAAA,+EAIHC,IAAMK,IAAI,2BAA4B,CACtDX,WACAY,QAAS,CACPC,cAAe3G,KAPE,cAIfsG,EAJe,yBAWdA,EAAInH,MAXU,yDAad,KAAIoH,SAASpH,MAbC,yDAAH,sDAiBTyH,GAAU,uCAAG,WACxB9G,GADwB,eAAAqG,EAAA,+EAIJC,IAAMC,KAAK,oBAAqB,KAAM,CACtDP,WACAY,QAAS,CACPC,cAAe7G,KAPG,cAIhBwG,EAJgB,yBAWfA,EAAInH,MAXW,yDAaf,KAAIoH,SAASpH,MAbE,yDAAH,sDC3DV0H,GAAiB,kBAAMC,eACvBC,GAAkDC,ICElDC,GAAqB,WAChC,IAAMC,EAAWL,KADqB,EAGCE,GAAexG,GAA9CP,EAH8B,EAG9BA,cAAeJ,EAHe,EAGfA,YAsBvBuH,IAAMC,WAAU,WAnBVpH,IAAkBJ,GACpB4G,GAAUxG,GACPqH,MAAK,SAACf,GACDA,EAAInH,MACN+H,EAAStG,EAAYf,eAAeyG,EAAInH,KAAKW,eAC7CoH,EACE1H,EAAWH,SAASyE,EAAKiB,OAAOC,iBAGlCkC,EAAStG,EAAYR,UACrB8G,EACE1H,EAAWH,SAASyE,EAAKiB,OAAOE,kBAIrCqC,OAAM,kBAAMC,QAAQC,MAAM,6CAO9B,K,QCfUC,GAX0B,SAACC,GAAW,IACzCnJ,EAAyBmJ,EAAzBnJ,KAAOoJ,EAAkBD,EAAlBC,GAAIC,EAAcF,EAAdE,UAEnB,OACI,eAAC,IAAMC,SAAP,UACI,eAAC,IAAD,CAAMD,UAAWA,EAAWD,GAAIA,EAAhC,SAAqCpJ,KADpBoJ,IC2IdG,I,OAnIc,WAC3B,IAAMC,EAAWC,cACT5H,EF8DqB,WAC7B,IAAM8G,EAAWL,KADkB,EAGGE,GAAexG,GAA7CT,EAH2B,EAG3BA,aAAcF,EAHa,EAGbA,YAatB,MAAO,CAAEQ,OAXG,uCAAG,sBAAA+F,EAAA,sDACTrG,IAAiBF,GACnBgH,GAAW9G,GACRuH,MAAK,WACJH,EAAStG,EAAYR,UACrB8G,EAAS1H,EAAWH,SAASyE,EAAKiB,OAAOI,oBAE1CmC,OAAM,kBAAMC,QAAQC,MAAM,4CAPlB,2CAAH,sDEnEOS,GAAX7H,OACF8G,EAAWL,KAEXqB,EAAanB,GAAetG,GALD,EAOD0G,IAAMgB,SAA6B,MAPlC,mBAO1BC,EAP0B,KAOhBC,EAPgB,KAY3BC,EAAkB,WACtBD,EAAY,OAbmB,EA+BalB,IAAMgB,SAA6B,MA/BhD,mBA+B1BI,EA/B0B,KA+BTC,EA/BS,KAgC3BC,EAAc/H,QAAQ6H,GAEtBG,EAAyB,SAACC,GAC9BH,EAAmBG,EAAMC,gBAErBC,EAAyB,WAC7BL,EAAmB,OAGfzH,EAAWgG,GAAerF,GAE1BoH,EAAgBpD,EAAIpE,KAAI,YAAqB,IAAlB6C,EAAiB,EAAjBA,MAAOwB,EAAU,EAAVA,IAChCoD,EAASpD,IAAQoC,EAASiB,SAAW,SAAW,GAEtD,OAAI7E,IAAUL,EAAKa,YAAYE,SAErB,gBAAC,IAAMgD,SAAP,WACE,eAACoB,EAAA,EAAD,CACIC,GAAG,eACHC,QAAST,EACTU,gBAAeX,EAAc,kBAAepI,EAC5CgJ,gBAAc,OACdC,gBAAeb,EAAc,YAASpI,EACtCkJ,MAAO,CAACC,cAAe,QAN3B,SAQK1F,EAAKa,YAAYE,WAEtB,gBAAC4E,EAAA,EAAD,CACIP,GAAG,aACHd,SAAUG,EACVmB,KAAMjB,EACNkB,QAASd,EACTe,cAAe,CACX,kBAAoB,gBAN5B,UASI,eAACC,EAAA,EAAD,CAAUV,QAASN,EAAnB,SACY,eAAC,GAAD,CAAatK,KAAK,WAAWoJ,GAAE,UAAK/E,EAAOE,QAAQE,UAG3DjC,EAASO,KAAI,SAACC,EAAGuI,GACb,OACI,eAACD,EAAA,EAAD,CAEAV,QAASN,EAFT,SAGI,eAAC,GAAD,CACItK,KAAMgD,EAAEhD,KACRoJ,GAAE,UAAK/E,EAAOE,QAAQE,KAApB,YAA4BzB,EAAEhD,SAJnCuL,WA3BFnE,GA0CvB,eAAC,GAAD,CAEIpH,KAAM4F,EACNwD,GAAIhC,EACJiC,UAAS,mBAAcmB,IAHlBpD,MASnB,OACE,+BACE,eAACoE,EAAA,EAAD,CAAQC,SAAS,SAASpC,UAAU,aAApC,SACE,gBAACqC,EAAA,EAAD,CAASrC,UAAU,cAAnB,UACE,eAACsC,EAAA,EAAD,CAAYtC,UAAU,YAAtB,SAAmC9D,EAAKC,OAAOI,QAC/C,uBAAMyD,UAAU,qBAAhB,SAAsCkB,IACtC,eAACqB,EAAA,EAAD,CAAYhB,QAjGI,SAACR,GACvBN,EAAYM,EAAMC,gBAgGZ,SACE,eAAC,IAAD,MAEF,eAACa,EAAA,EAAD,CACEP,GAAG,aACHd,SAAUA,EACVsB,KAAMhJ,QAAQ0H,GACduB,QAASrB,EACTsB,cAAe,CACb,kBAAmB,eANvB,SAQG1B,EACC,eAAC2B,EAAA,EAAD,CAAUV,QA5FD,WACnB/I,IACAkI,KA0FU,SAAkCxE,EAAKC,OAAOK,SAE9C,eAACyF,EAAA,EAAD,CAAUV,QAxGO,WAC3BjC,EACE1H,EAAWN,UAAU,CACnBf,IAAKiM,EAAUxG,OAAOC,SAI1ByE,KAiGU,SACGxE,EAAKC,OAAOF,mB,kBC3I7B+B,KAAOC,SACP,IAAMC,GAAUC,wJAAYC,kBAEPqE,G,4IACjB,6GAE+BjE,IAAMK,IAAI,gBAAiB,CAC9CX,aAHZ,cAEcS,EAFd,yBAKeA,GALf,oG,6DCCS+D,GAAqB,uCAAG,4BAAAnE,EAAA,+EAEXoE,GAAWC,iBAFA,cAEvBlE,EAFuB,yBAGtBA,EAAInH,MAHkB,yDAKtB,KAAIoH,SAASpH,MALS,yDAAH,qD,+BC+BnBsL,I,OAhCI,WACjB,IAAMvD,EAAWL,KACThI,EAAUkI,GAAezH,GAAzBT,MAIF6L,EAAc,SAAC/B,EAAqCgC,GACzC,cAAXA,GAEJzD,EAAS1H,EAAWH,SAAS,QAG/B,OACE,eAACuL,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAGdrB,KAf8B,OAAV7K,EAgBpBmM,iBAAkB,IAClBrB,QAASe,EACTO,QAASpM,EACTqM,OACE,eAACf,EAAA,EAAD,CAAYgB,aAAW,QAAQC,MAAM,UAAUjC,QAASuB,EAAxD,SACE,eAAC,KAAD,OAPC7L,KCjBIwM,GAJ2B,SAAC3D,GACzC,OAAO,uD,qBCaM4D,I,OAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KACrB,OACE,uBAAK5D,UAAU,OAAf,UACE,eAAC,KAAD,CAAsB6D,SAAS,QAAQL,MAAM,UAAUlC,GAAG,SAC1D,qBAAIA,GAAG,aAAP,SAAqBqC,IACrB,oBAAGrC,GAAG,YAAN,SAAmBsC,SCOVE,I,OAdmB,SAAChE,GACjC,OACE,iCACE,+DACA,uBAAKE,UAAU,iBAAf,UACE,eAAC,GAAD,CAAM2D,MAAM,aAAaC,KAAK,wEAC9B,eAAC,GAAD,CAAMD,MAAM,aAAaC,KAAK,wEAC9B,eAAC,GAAD,CAAMD,MAAM,aAAaC,KAAK,wEAC9B,eAAC,GAAD,CAAMD,MAAM,aAAaC,KAAK,gF,oDCYvB1G,GAvBK,CACnB,CACCX,MAAOL,EAAKgB,YAAYzB,oBACxBsC,IAAK/C,EAAOS,qBAEb,CACCc,MAAOL,EAAKgB,YAAYxB,cACxBqC,IAAK/C,EAAOU,eAEb,CACCa,MAAOL,EAAKgB,YAAY1B,UACxBuC,IAAK/C,EAAOQ,WAEb,CACCe,MAAOL,EAAKgB,YAAYvB,KACxBoC,IAAK/C,EAAOW,MAEb,CACCY,MAAOL,EAAKgB,YAAYtB,QACxBmC,IAAK/C,EAAOY,U,wCCOCmI,GApBsC,SAACjE,GAElD,OACI,eAACkE,GAAA,EAAD,CACIC,QAAQ,aACRC,OAAO,OACPpC,KAAMhC,EAAMqE,OACZC,WAAY,CAAEzC,MAAO,CAAES,SAAU,aAJrC,SAMI,eAACiC,GAAA,EAAD,UACKvE,EAAMwE,MAAM5K,KAAI,SAAC6K,EAAM9K,GAAP,OACb,eAAC+K,GAAA,EAAD,CAAUC,QAAM,EAAaC,UAAWC,IAAM5E,GAAIwE,EAAKK,IAAvD,SACI,eAACC,GAAA,EAAD,CAAcC,QAASP,EAAKZ,SADVlK,WCuD3BsL,I,OAjDgC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACtBzF,IAAMgB,UAAS,GADO,mBAChD0E,EADgD,KACtCC,EADsC,KAElDC,EAASF,EAAU,SAAW,GAI9BG,EAFWjG,GAAerF,GAEmBuL,MAAK,SAAAtL,GAAO,OAAIA,EAAQpD,OAASqO,EAAMM,OAAOC,cAEjG,IAAKH,EACD,OAAO,mEAGX,IAAId,EAAwCpH,GAAYxD,KAAI,SAAA8L,GACxD,MAAO,CACH7B,MAAQ6B,EAAYjJ,MACpBqI,IAAM5J,EAAOE,QAAQE,KAAO,IAAMgK,EAAazO,KAAO6O,EAAYzH,QAI1E,OACI,uBAAKiC,UAAW,eAAhB,UACI,sBAAKA,UAAW,CAAC,UAAWmF,GAAQM,KAAK,KAAzC,SACI,eAAC,GAAD,CAAetB,OAAQc,EAAUX,MAAOA,MAE5C,sBAAKtE,UAAU,eAAf,SACI,eAAC0F,GAAA,EAAD,CACI1F,UAAU,eACV2F,MAAM,QACNV,SAAUA,EACVW,SAAU,WACNV,GAAaD,IALrB,SAQCA,EAAU,eAAC,KAAD,IAAsB,eAAC,KAAD,QAGrC,sBAAKjF,UAAW,oBAAhB,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO6F,OAAK,EAACC,KAAMd,EAAMe,IAAKC,OAAQ,kBAAM,eAAC,GAAD,CAAgBjM,QAASqL,OACrE,eAAC,IAAD,CAAOS,OAAK,EAACC,KAAI,UAAKd,EAAMe,IAAX,SAAuBC,OAAQ,kBAAM,eAAC,GAAD,CAAajM,QAASqL,OAC5E,eAAC,IAAD,CAAOS,OAAK,EAACC,KAAI,UAAKd,EAAMe,IAAX,cAA4BC,OAAQ,kBAAM,eAACC,GAAD,CAAkBlM,QAASqL,OACtF,eAAC,IAAD,CAAOS,OAAK,EAACC,KAAI,UAAKd,EAAMe,IAAX,SAAuBC,OAAQ,kBAAM,eAAC,GAAD,CAAajM,QAASqL,OAC5E,eAAC,IAAD,CAAOS,OAAK,EAACC,KAAI,UAAKd,EAAMe,IAAX,YAA0BC,OAAQ,kBAAM,eAAC,GAAD,CAAgBjM,QAASqL,iBCxCvFc,GAtBS,WACpB,IAAM/M,EAAWgG,GAAerF,GAEhC,OACI,iCACI,gDAGA,+BACKX,EAASO,KAAI,SAACK,EAASmI,GACpB,OACI,8BACI,eAAC,GAAD,CAAavL,KAAMoD,EAAQpD,KACfoJ,GAAE,UAAK/E,EAAOE,QAAQE,KAApB,YAA4BrB,EAAQpD,SAF7CuL,Y,oBCIlBiE,GAV+C,SAACrG,GAC3D,OACI,gBAACsG,GAAA,EAAD,CAAaC,UAAU,IAAvB,UACI,eAAC,KAAD,CAAMC,KAAMtL,EAAOE,QAAQE,KAAMmL,UAAU,OAA3C,4BACA,gBAAC,KAAD,CAAMD,KAAMtL,EAAOE,QAAQE,KAAO,IAAM0E,EAAM0G,aAAcD,UAAU,OAAtE,cAA+EzG,EAAM0G,aAArF,OACA,gBAAClE,EAAA,EAAD,eAAcxC,EAAM2G,UAApB,WCEGC,GATgC,SAAC5G,GAC5C,OACI,iCACI,eAAC,GAAD,CAAoB0G,aAAc1G,EAAM/F,QAAQpD,KAAM8P,UAAWvK,EAAKgB,YAAYzB,sBADtF,iBAEmBqE,EAAM/F,QAAQpD,KAFjC,QCOOgQ,GAT6B,SAAC7G,GACzC,OACI,iCACI,eAAC,GAAD,CAAoB0G,aAAc1G,EAAM/F,QAAQpD,KAAM8P,UAAWvK,EAAKgB,YAAYxB,gBADtF,iBAEmBoE,EAAM/F,QAAQpD,KAFjC,QCOO+P,GATgC,SAAC5G,GAC5C,OACI,iCACI,eAAC,GAAD,CAAoB0G,aAAc1G,EAAM/F,QAAQpD,KAAM8P,UAAWvK,EAAKgB,YAAY1B,YADtF,sBAEwBsE,EAAM/F,QAAQpD,KAFtC,QCOOiQ,GAT6B,SAAC9G,GACzC,OACI,iCACI,eAAC,GAAD,CAAoB0G,aAAc1G,EAAM/F,QAAQpD,KAAM8P,UAAWvK,EAAKgB,YAAYvB,OADtF,iBAEmBmE,EAAM/F,QAAQpD,KAFjC,QCOOkQ,GATgC,SAAC/G,GAC5C,OACI,iCACI,eAAC,GAAD,CAAoB0G,aAAc1G,EAAM/F,QAAQpD,KAAM8P,UAAWvK,EAAKgB,YAAYtB,UADtF,oBAEsBkE,EAAM/F,QAAQpD,KAFpC,QCQOmQ,GAdqB,SAAChH,GACnC,OACE,iCACE,0DACA,uBAAKE,UAAU,iBAAf,UACE,eAAC,GAAD,CAAM2D,MAAM,aAAaC,KAAK,wEAC9B,eAAC,GAAD,CAAMD,MAAM,aAAaC,KAAK,wEAC9B,eAAC,GAAD,CAAMD,MAAM,aAAaC,KAAK,wEAC9B,eAAC,GAAD,CAAMD,MAAM,aAAaC,KAAK,+ECDvBmD,GAR6B,SAAAjH,GAC3C,OACC,+BACC,iECeYkH,GAbG,WAChB,OACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOnB,OAAK,EAACC,KAAM9K,EAAOM,SAAUoJ,UAAWjB,KAC/C,eAAC,IAAD,CAAOqC,KAAM9K,EAAOE,QAAQC,KAAMuJ,UAAWK,KAC7C,eAAC,IAAD,CAAOc,OAAK,EAACC,KAAM9K,EAAOE,QAAQE,KAAMsJ,UAAWwB,KACnD,eAAC,IAAD,CAAOL,OAAK,EAACC,KAAM9K,EAAOC,KAAMyJ,UAAWZ,KAC3C,eAAC,IAAD,CAAO+B,OAAK,EAACC,KAAM9K,EAAOO,MAAOmJ,UAAWoC,KAC5C,eAAC,IAAD,CAAOjB,OAAK,EAACC,KAAM9K,EAAOQ,UAAWkJ,UAAWqC,S,UC8BvCE,I,OAzBmC,SAACnH,GACjD,I/B0C0BoH,E+B1CpB5H,EAAWL,KACXkI,EAAQhI,I/ByCY+H,E+BzCepH,EAAMoH,S/ByCO,SAAC9P,GAAD,OACtDA,EAAMO,IAAIb,OAAOoQ,M+BxCXpE,EAAc,WAClBxD,EAAS1H,EAAWJ,WAAW,CAAEjB,IAAKuJ,EAAMoH,aAGxCE,EAAoC,CACxCC,UAAS,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAO5P,KAClBuL,eAGF,OACE,eAACwE,GAAA,EAAD,CACExF,KAAI,OAAEqF,QAAF,IAAEA,OAAF,EAAEA,EAAOnQ,QACbgJ,UAAS,wBAAmBF,EAAMnJ,KAAzB,UACToL,QAASjC,EAAMyH,oBAAsB,aAAWzE,EAHlD,SAII,sBAAK9C,UAAU,wBAAf,SACGT,IAAMiI,aAAa1H,EAAM2H,SAAUL,S,sECnB/BM,I,OAZ8B,SAAC5H,GAAW,IAC/CE,EAAiCF,EAAjCE,UAAWyH,EAAsB3H,EAAtB2H,SAAaE,EADsB,aACb7H,EADa,0BAGhD8H,EAAUC,KAAW,cAAe7H,GAE1C,OACE,eAACqB,EAAA,EAAD,6BAAYsG,GAAZ,IAAkB3H,UAAW4H,EAA7B,SACGH,OC0DQK,I,OA9D6B,SAAChI,GAC3C,IAAMiI,EAASxI,IAAMyI,SACnB,kBACEC,KAAW,CACT3P,SAAU2P,OAEPC,SAAShM,EAAKD,MAAMS,sBAEvB4B,SAAU2J,OAEPC,SAAShM,EAAKD,MAAMY,0BAE3B,IAGIsL,EAAOC,aAAU,CACrBC,cAAe,CACb/P,SAAU,GACVgG,SAAU,IAEZgK,iBAAkBP,EAClBQ,SAAU,SAACC,GACT1I,EAAMyI,SAASC,EAAOlQ,SAAUkQ,EAAOlK,aAI3C,OACE,wBAAM0B,UAAU,kBAAkBuI,SAAUJ,EAAKM,aAAjD,UACE,eAACC,GAAA,EAAD,CACE/R,KAAK,WACLgS,MAAOzM,EAAKD,MAAMQ,SAClBwH,QAAQ,WACR0B,MAAOwC,EAAKK,OAAOlQ,SACnBsN,SAAUuC,EAAKS,aACfC,OAAQV,EAAKW,WACblJ,MAAO9G,QAAQqP,EAAKY,QAAQzQ,WAAaQ,QAAQqP,EAAKa,OAAO1Q,UAC7D2Q,WAAYd,EAAKY,QAAQzQ,UAAY6P,EAAKa,OAAO1Q,SACjD0H,UAAU,qBAEZ,eAAC0I,GAAA,EAAD,CACE/R,KAAK,WACLgS,MAAOzM,EAAKD,MAAMW,SAClBqH,QAAQ,WACR0B,MAAOwC,EAAKK,OAAOlK,SACnBsH,SAAUuC,EAAKS,aACfC,OAAQV,EAAKW,WACblJ,MAAO9G,QAAQqP,EAAKY,QAAQzK,WAAaxF,QAAQqP,EAAKa,OAAO1K,UAC7D2K,WAAYd,EAAKY,QAAQzK,UAAY6J,EAAKa,OAAO1K,SACjD4K,KAAK,WACLlJ,UAAU,qBAEZ,eAAC,GAAD,CACEiE,QAAQ,YACRkF,kBAAgB,EAChBD,KAAK,SACLE,SAAUtJ,EAAMsJ,SAJlB,SAKGlN,EAAKC,OAAOC,cC1DfiN,I,OAAsC,SAACvJ,GAAW,IAC9CgD,EAAgBhD,EAAhBgD,YACF9K,EAAcmH,GAAepG,GAFkB,EzB2BzB,WAC5B,IAAMuG,EAAWL,KADiB,EAGEsB,oBAAS,GAHX,mBAG3B+I,EAH2B,KAGfC,EAHe,OAIRhJ,mBAAwB,MAJhB,mBAI3BX,EAJ2B,KAIpB4J,EAJoB,OAKJjJ,mBAAwB,MALpB,mBAK3BkJ,EAL2B,KAKlBC,EALkB,KA4ClC,OApCAlK,qBAAU,WACR,OAAO,WACL+J,GAAc,GACdC,EAAS,MACTE,EAAW,SAEZ,IA8BI,CAAEC,YA5BQ,uCAAG,WAAOrR,EAAkBgG,GAAzB,SAAAC,EAAA,sDAClBgL,GAAc,GACdjK,EAAStG,EAAYN,gBAAe,IAEpC2F,GAAU/F,EAAUgG,GACjBmB,MAAK,SAACf,GACDA,EAAInH,MACN+H,EAAStG,EAAYf,eAAeyG,EAAInH,KAAKW,eAC7CoH,EAAStG,EAAYb,gBAAgBuG,EAAInH,KAAKa,gBAC9CkH,EAAStG,EAAYX,YAAYqG,EAAInH,KAAKe,WAC1CgH,EAAStG,EAAYT,eAAemG,EAAInH,KAAKQ,cAE7CuH,EAAS1H,EAAWH,SAASyE,EAAKiB,OAAOG,gBAEzCoM,EAAWhL,EAAI2E,SACfmG,EAAS,QAETE,EAAW,MACXF,EAAS9K,EAAI2E,aAGhB5D,MAAK,WACJ8J,GAAc,GACdjK,EAAStG,EAAYN,gBAAe,OAErCgH,OAAM,kBAAMC,QAAQC,MAAM,2CAzBX,2CAAH,wDA4BK0J,aAAY1J,QAAO6J,WyBnEDG,GAAhCD,EAJ6C,EAI7CA,YAAa/J,EAJgC,EAIhCA,MAAO6J,EAJyB,EAIzBA,QAU5B,OANAlK,IAAMC,WAAU,WACViK,GACF3G,GAAeA,MAEhB,CAACA,EAAa2G,IAGf,uBAAKzJ,UAAU,kBAAf,UACE,qBAAIA,UAAU,mBAAd,SAAkC9D,EAAKD,MAAMM,QAC7C,eAAC,GAAD,CAAWgM,SAXS,SAACsB,EAAcC,GAAf,OAA+BH,EAAYE,EAAMC,IAW/BV,SAAUpR,IAC/C4H,GAAS,oBAAGI,UAAU,cAAb,0BAAsCJ,UAKzCmK,GAAa,WACxB,OACE,eAAC,GAAD,CAAOpT,KAAK,QAAQuQ,SAAU1E,EAAUxG,OAAOC,MAA/C,SACE,eAAC,GAAD,OC3BS+N,GARA,WACb,OACE,qCACE,eAAC,GAAD,OCkESC,I,OAlEA,WAgBX,OAEI,sBAAKjK,UAAU,YAAf,SACI,uBAAKA,UAAU,SAAf,UACI,uBAAKA,UAAU,cAAf,UACI,uBAAKA,UAAU,cAAf,UACI,sBAAKkK,IAAI,sBAAsBlK,UAAU,aAEzC,uBAAKA,UAAU,yBAAf,UACI,sBAAIA,UAAU,cAAd,UAA4B,qCAA5B,IAAwC9D,EAAKsB,SAASC,OACtD,sBAAIuC,UAAU,cAAd,UAA4B,qCAA5B,IAAwC9D,EAAKsB,SAASE,OACtD,sBAAIsC,UAAU,cAAd,UAA4B,sCAA5B,IAAyC9D,EAAKsB,SAASG,SACvD,sBAAIqC,UAAU,cAAd,UAA4B,8CAA5B,IAAiD9D,EAAKsB,SAASI,2BAGvE,uBAAKoC,UAAU,eAAf,UACI,uBAAKA,UAAU,yBAAf,UACI,sBAAIA,UAAU,iBAAd,cAAiC9D,EAAKa,YAAYC,YACjDc,EAAIpE,KAAI,YAAmB,IAAjB6C,EAAgB,EAAhBA,MAAOwB,EAAS,EAATA,IACd,OACI,qBAAIiC,UAAU,cAAd,SACI,eAAC,GAAD,CAAarJ,KAAM4F,EAAOwD,GAAIhC,KADDA,SAM7C,uBAAKiC,UAAU,yBAAf,UACI,sBAAIA,UAAU,iBAAd,cAAiC9D,EAAKa,YAAYE,YA1CzD,CAAC,CACdtG,KAAM,eAEN,CACIA,KAAM,QACP,CACCA,KAAM,oBACP,CACCA,KAAM,QACP,CACCA,KAAM,MACP,CACCA,KAAM,YA+BoB+C,KAAI,SAACK,EAASmI,GACpB,OACI,qBAAIlC,UAAU,cAAd,SACI,eAAC,GAAD,CACIrJ,KAAMoD,EAAQpD,KACdoJ,GAAE,UAAK/E,EAAOE,QAAQE,KAApB,YAA4BrB,EAAQpD,SAHbuL,eAYrD,sBAAKlC,UAAU,mBACf,sBAAIA,UAAU,cAAd,UAA4B,0DAA5B,IAA6D9D,EAAKsB,SAASK,iB,OCpC5EsM,OAjBf,WAIE,OAHA9K,KCNqC,WACnC,IAAMC,EAAWL,KACjBK,EAAStF,EAAeZ,qBAAoB,IAE5C,IAAMgR,EAAoB,uCAAG,sBAAA7L,EAAA,sDACzBmE,KACKjD,MAAK,SAACf,GACCA,EAAInH,KACJ+H,EAAStF,EAAeX,YAAYqF,EAAInH,OAExC+H,EAAS1H,EAAWH,SAASiH,EAAI2E,aAGxC5D,MAAK,WACFH,EAAStF,EAAeZ,qBAAoB,OAE/CsG,OAAM,WACHC,QAAQC,MAAM,mDAbG,2CAAH,qDAiB1BJ,qBAAU,WACN4K,MACD,IDhBLC,GAGE,sBAAKrK,UAAU,MAAf,SACI,gBAAC,IAAD,WACI,eAAC,GAAD,IACA,eAACsK,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,UERGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhL,MAAK,YAAkD,IAA/CiL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAS/E,OACP,eAAC,IAAMgF,WAAP,UACE,eAAC,IAAD,CAAUxQ,MAAOA,EAAjB,SACE,eAAC,IAAD,CAAayQ,QAAS,KAAMnQ,UAAWA,EAAvC,SACE,eAAC,GAAD,UAINoQ,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.b5d1ba11.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\n\n// Reducer imports go here\nimport appReducer from './slices/AppRedux';\nimport authReducer from './slices/AuthRedux';\nimport projectReducer from './slices/ProjectRedux';\n\n// Persist config\nconst createPersistConfig = (key: string, blacklist?: string[]) => ({\n  key,\n  storage,\n  blacklist,\n});\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  auth: persistReducer(createPersistConfig('auth'), authReducer),\n  project: projectReducer\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '@redux/store';\nimport { CONSTANTS } from '@statics';\n\nexport interface ModalState {\n  visible: boolean;\n  data?: Object;\n}\n\nexport type ValidModalKey =\n  typeof CONSTANTS.MODALS[keyof typeof CONSTANTS.MODALS];\n\ninterface AppState {\n  isReady: boolean;\n  modals: Record<ValidModalKey, ModalState>;\n  alert: string | null;\n}\n\nconst initialState: AppState = {\n  isReady: false,\n  modals: {\n    login: {\n      visible: false,\n    },\n  },\n  alert: null,\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setIsReady: (state, { payload }: PayloadAction<boolean>) => {\n      state.isReady = payload;\n    },\n    openModal: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        key: ValidModalKey;\n        data?: Object;\n      }>\n    ) => {\n      state.modals[payload.key] = {\n        visible: true,\n        data: payload.data,\n      };\n    },\n    closeModal: (\n      state,\n      { payload }: PayloadAction<{ key: ValidModalKey; data?: Object }>\n    ) => {\n      state.modals[payload.key] = {\n        visible: false,\n        data: payload.data,\n      };\n    },\n    setAlert: (state, { payload }: PayloadAction<string | null>) => {\n      state.alert = payload;\n    },\n  },\n});\n\nexport const selectApp = (state: RootState) => state.app;\nexport const selectModal = (modalKey: ValidModalKey) => (state: RootState) =>\n  state.app.modals[modalKey];\n\nexport const appActions = appSlice.actions;\nexport default appSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '@redux/store';\nimport { UserType } from '@services/adapters/authAdapter';\n\ninterface AuthState {\n  access_token?: string;\n  refresh_token?: string;\n  username?: string;\n  permissions: UserType;\n  isLoggingIn: boolean;\n}\n\nconst initialState: AuthState = {\n  permissions: 'default',\n  isLoggingIn: false,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setAccessToken: (state, { payload }: PayloadAction<string>) => {\n      state.access_token = payload;\n    },\n    setRefreshToken: (state, { payload }: PayloadAction<string>) => {\n      state.refresh_token = payload;\n    },\n    setUsername: (state, { payload }: PayloadAction<string>) => {\n      state.username = payload;\n    },\n    setPermissions: (state, { payload }: PayloadAction<UserType>) => {\n      state.permissions = payload;\n    },\n    logout: (state) => {\n      state.username = undefined;\n      state.access_token = undefined;\n      state.refresh_token = undefined;\n      state.permissions = 'default';\n    },\n    setIsLoggingIn: (state, { payload }: PayloadAction<boolean>) => {\n      state.isLoggingIn = payload;\n    },\n  },\n});\n\nexport const selectAuth = (state: RootState) => state.auth;\nexport const selectIsLoggedIn = (state: RootState) =>\n  Boolean(state.auth.refresh_token);\nexport const selectIsLoggingIn = (state: RootState) => state.auth.isLoggingIn;\n\nexport const authActions = authSlice.actions;\nexport default authSlice.reducer;\n","import {RootState} from \"@redux/store\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\"\nimport { Project } from '@entities/Project'\n\nexport interface ProjectState {\n    isProjectLoading: boolean,\n    projects: Project[]\n}\n\nconst initialState: ProjectState = {\n    isProjectLoading: false,\n    projects: []\n}\n\nexport const projectSlice = createSlice({\n    name: 'project',\n    initialState,\n    reducers: {\n        setIsProjectLoading: (state, { payload }: PayloadAction<boolean>) => {\n            state.isProjectLoading = payload;\n        },\n        setProjects: (state, { payload }: PayloadAction<Project[]>) => {\n            state.projects = payload;\n        },\n        addProject: (state, { payload }: PayloadAction<Project>) => {\n            state.projects.push(\n                payload\n            )\n        },\n        removeProject: (state, { payload }: PayloadAction<string>) => {\n            let index = state.projects.map((e) => e.name).indexOf(payload);\n            if (index !== -1) {\n                state.projects.splice(index);\n            }\n        },\n    }\n});\n\nexport const selectProject = (state: RootState) => state.project;\nexport const selectProjects = (state: RootState) => state.project.projects;\nexport const selectIsProjectLoading = (state: RootState) => state.project.isProjectLoading;\n\nexport const projectActions = projectSlice.actions;\nexport default projectSlice.reducer;\n","const ROUTES = {\n  HOME: '/',\n  PROJECT: {\n    PATH: '/projects/:project_id/',\n    BASE: '/projects',\n    OVERVIEW: '/projects/overview',\n  },\n  TIMELINE: '/timeline',\n  ABOUT: '/about',\n  RESOURCES: '/resources',\n  PROJECT_DESCRIPTION: '/',\n  JOIN_THE_TEAM: '/join',\n  TEAM: '/team',\n  CONTACT: '/contact',\n} as const;\n\nexport default ROUTES;\n","const constants = {\n  MIN_PASSWORD_LENGTH: 8,\n  MIN_USERNAME_LENGTH: 4,\n\n  MODALS: {\n    LOGIN: 'login',\n  },\n} as const;\n\nexport default constants;\n","import constants from './constants';\n\nconst TEXT = {\n  COMMON: {\n    SUBMIT: 'Submit',\n    BACK: 'Back',\n    NEXT: 'Next',\n    TITLE: 'UBC Visual Cognition Lab',\n    LOGIN: 'Login',\n    LOGOUT: 'Logout',\n  },\n\n  LOGIN: {\n    TITLE:\n      'Login to gain edit permissions. Please contact Tech Manager to create account.',\n    USERNAME: 'Username',\n    USERNAME_EMPTY_ERROR: 'Username is required',\n    USERNAME_LENGTH_ERROR: `Minimum ${constants.MIN_USERNAME_LENGTH} characters`,\n    PASSWORD: 'Password',\n    PASSWORD_EMPTY_ERROR: 'Password is required',\n    PASSWORD_LENGTH_ERROR: `Minimum ${constants.MIN_PASSWORD_LENGTH} characters`,\n  },\n\n  PAGE_TITLES: {\n    NAVIGATE: 'Navigate',\n    HOME: 'Home',\n    TIMELINE: 'Timeline',\n    PROJECTS: 'Projects',\n    OVERVIEW: 'Overview',\n    ABOUT: 'About',\n    RESOURCES: 'Resources',\n  },\n\n  PROJECT_NAV: {\n      PROJECT_DESCRIPTION: 'Project Description',\n      JOIN_THE_TEAM: 'Join the Team',\n      RESOURCES: 'Resources',\n      TEAM: 'Team',\n      CONTACT: 'Contact',\n  },\n\n  ALERTS: {\n    AUTH_SUCCESS: 'Authentication successful.',\n    AUTH_FAILED: 'Authentication failed.',\n    LOGIN_SUCCESS: 'Successfully logged in.',\n    LOGOUT_SUCCESS: 'Successfully logged out.',\n  },\n\n  LAB_INFO: {\n      TEL: '604 822 9653',\n      FAX: '604 822 6923',\n      EMAIL: 'vclmanager@gmail.com',\n      DRRENSINK_CONTACT: 'rensink@psych.ubc.ca',\n      CAMPUS: 'Vancouver Campus'\n  }\n} as const;\n\nexport default TEXT;\n","import ROUTES from \"./routes\";\nimport TEXT from \"./text\";\n\nconst NAV = [\n\t{\n\t\tTITLE: TEXT.PAGE_TITLES.HOME,\n\t\tREF: ROUTES.HOME\n\t},\n\t{\n\t\tTITLE: TEXT.PAGE_TITLES.TIMELINE,\n\t\tREF: ROUTES.TIMELINE\n\t},\n\t{\n\t\tTITLE: TEXT.PAGE_TITLES.PROJECTS,\n\t\tREF: ROUTES.PROJECT.BASE\n\t},\n\t{\n\t\tTITLE: TEXT.PAGE_TITLES.ABOUT,\n\t\tREF: ROUTES.ABOUT\n\t},\n\t{\n\t\tTITLE: TEXT.PAGE_TITLES.RESOURCES,\n\t\tREF: ROUTES.RESOURCES\n\t}\n];\n\nexport default NAV;\n","import axios from 'axios';\nimport dotenv from 'dotenv';\nimport type { BaseResponse } from './types';\n\ndotenv.config();\nconst baseURL = process.env.REACT_APP_API_URL;\n\nexport type UserType = 'default' | 'member' | 'admin';\n\ninterface LoginResponse extends BaseResponse {\n  data?: {\n    access_token: string;\n    refresh_token: string;\n    username: string;\n    permissions: UserType;\n  };\n}\n\nexport const loginUser = async (\n  username: string,\n  password: string\n): Promise<LoginResponse> => {\n  try {\n    const res = await axios.post(\n      '/api/users/login',\n      {\n        username,\n        password,\n      },\n      {\n        baseURL,\n      }\n    );\n\n    return res.data as LoginResponse;\n  } catch (err: any) {\n    return err.response.data as BaseResponse;\n  }\n};\n\ninterface CheckAuthResponse extends BaseResponse {\n  data?: {\n    access_token: string;\n  };\n}\n\nexport const checkAuth = async (\n  refresh_token: string\n): Promise<CheckAuthResponse> => {\n  try {\n    const res = await axios.get('/api/tokens/access_token', {\n      baseURL,\n      headers: {\n        authorization: refresh_token,\n      },\n    });\n\n    return res.data as CheckAuthResponse;\n  } catch (err: any) {\n    return err.response.data as BaseResponse;\n  }\n};\n\nexport const logoutUser = async (\n  access_token: string\n): Promise<BaseResponse> => {\n  try {\n    const res = await axios.post('/api/users/logout', null, {\n      baseURL,\n      headers: {\n        authorization: access_token,\n      },\n    });\n\n    return res.data as BaseResponse;\n  } catch (err: any) {\n    return err.response.data as BaseResponse;\n  }\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useEffect, useState } from 'react';\nimport { loginUser, checkAuth, logoutUser } from './adapters/authAdapter';\nimport { useAppSelector, useAppDispatch } from '@redux/hooks';\nimport { selectAuth, authActions } from '@redux/slices/AuthRedux';\nimport { appActions } from '@redux/slices/AppRedux';\nimport { TEXT } from '@statics';\n\nexport const useHandleCheckAuth = () => {\n  const dispatch = useAppDispatch();\n\n  const { refresh_token, isLoggingIn } = useAppSelector(selectAuth);\n\n  const handleCheckAuth = () => {\n    if (refresh_token && !isLoggingIn) {\n      checkAuth(refresh_token)\n        .then((res) => {\n          if (res.data) {\n            dispatch(authActions.setAccessToken(res.data.access_token));\n            dispatch(\n              appActions.setAlert(TEXT.ALERTS.AUTH_SUCCESS)\n            );\n          } else {\n            dispatch(authActions.logout());\n            dispatch(\n              appActions.setAlert(TEXT.ALERTS.AUTH_FAILED)\n            );\n          }\n        })\n        .catch(() => console.error('Error: authService.ts checkAuth call'));\n    }\n  };\n\n  React.useEffect(() => {\n    handleCheckAuth();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport const useHandleLogin = () => {\n  const dispatch = useAppDispatch();\n\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  // Cleanup state for component unmounting\n  useEffect(() => {\n    return () => {\n      setIsFetching(false);\n      setError(null);\n      setSuccess(null);\n    };\n  }, []);\n\n  const handleLogin = async (username: string, password: string) => {\n    setIsFetching(true);\n    dispatch(authActions.setIsLoggingIn(true));\n\n    loginUser(username, password)\n      .then((res) => {\n        if (res.data) {\n          dispatch(authActions.setAccessToken(res.data.access_token));\n          dispatch(authActions.setRefreshToken(res.data.refresh_token));\n          dispatch(authActions.setUsername(res.data.username));\n          dispatch(authActions.setPermissions(res.data.permissions));\n\n          dispatch(appActions.setAlert(TEXT.ALERTS.LOGIN_SUCCESS));\n\n          setSuccess(res.message);\n          setError(null);\n        } else {\n          setSuccess(null);\n          setError(res.message);\n        }\n      })\n      .then(() => {\n        setIsFetching(false);\n        dispatch(authActions.setIsLoggingIn(false));\n      })\n      .catch(() => console.error('Error: authService.ts loginUser call'));\n  };\n\n  return { handleLogin, isFetching, error, success };\n};\n\nexport const useHandleLogout = () => {\n  const dispatch = useAppDispatch();\n\n  const { access_token, isLoggingIn } = useAppSelector(selectAuth);\n\n  const logout = async () => {\n    if (access_token && !isLoggingIn) {\n      logoutUser(access_token)\n        .then(() => {\n          dispatch(authActions.logout());\n          dispatch(appActions.setAlert(TEXT.ALERTS.LOGOUT_SUCCESS));\n        })\n        .catch(() => console.error('Error: authService.ts logoutUser call'));\n    }\n  };\n\n  return { logout };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface LinkProps {\n    name: string;\n    to: string;\n    className?: string;\n}\n\nconst GenericLink: React.FC<LinkProps> = (props) => {\n    const { name , to, className } = props;\n\n    return (\n        <React.Fragment key={to}>\n            <Link className={className} to={to}>{name}</Link>\n        </React.Fragment>\n    )\n\n}\n\nexport default GenericLink;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Button,\n} from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { NAV, TEXT, CONSTANTS, ROUTES } from '@statics';\nimport { useHandleLogout } from '@services/authService';\nimport { useAppDispatch, useAppSelector } from '@redux/hooks';\nimport { appActions } from '@redux/slices/AppRedux';\nimport { selectIsLoggedIn } from '@redux/slices/AuthRedux';\nimport { selectProjects } from '@redux/slices/ProjectRedux';\nimport GenericLink from '@components/generics/Link';\nimport './Navbar.css';\n\nconst Navbar: React.FC<{}> = () => {\n  const location = useLocation();\n  const { logout } = useHandleLogout();\n  const dispatch = useAppDispatch();\n\n  const isLoggedIn = useAppSelector(selectIsLoggedIn);\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleOpenLoginModal = () => {\n    dispatch(\n      appActions.openModal({\n        key: CONSTANTS.MODALS.LOGIN,\n      })\n    );\n\n    handleMenuClose();\n  };\n\n  const handleLogout = () => {\n    logout();\n    handleMenuClose();\n  };\n\n  const [projectAnchorEl, setProjectAnchorEl] = React.useState<null | HTMLElement>(null);\n  const projectOpen = Boolean(projectAnchorEl)\n\n  const handleProjectMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setProjectAnchorEl(event.currentTarget);\n  };\n  const handleProjectMenuClose = () => {\n    setProjectAnchorEl(null);\n  };\n\n  const projects = useAppSelector(selectProjects)\n\n  const renderedLinks = NAV.map(({ TITLE, REF }) => {\n    const active = REF === location.pathname ? 'active' : '';\n\n    if (TITLE === TEXT.PAGE_TITLES.PROJECTS) {\n        return (\n              <React.Fragment key={REF}>\n                <Button\n                    id='basic-button'\n                    onClick={handleProjectMenuClick}\n                    aria-controls={projectOpen ? 'basic-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    aria-expanded={projectOpen ? 'true' : undefined}\n                    style={{textTransform: \"none\"}}\n                >\n                    {TEXT.PAGE_TITLES.PROJECTS} \n                </Button>\n                <Menu\n                    id=\"basic-menu\" \n                    anchorEl={projectAnchorEl}\n                    open={projectOpen}\n                    onClose={handleProjectMenuClose}\n                    MenuListProps={{\n                        'aria-labelledby' : 'basic-button'\n                    }}\n                >\n                    <MenuItem onClick={handleProjectMenuClose}>\n                                <GenericLink name=\"Overview\" to={`${ROUTES.PROJECT.BASE}`}/>\n                    </MenuItem>\n                    {\n                        projects.map((e, i) => {\n                            return (\n                                <MenuItem \n                                key={i}\n                                onClick={handleProjectMenuClose}>\n                                    <GenericLink\n                                        name={e.name}\n                                        to={`${ROUTES.PROJECT.BASE}/${e.name}`}\n                                    />\n                                </MenuItem>\n                            )\n                        })\n                    }\n                </Menu>\n              </React.Fragment>\n            )\n    } else {\n        return (\n            <GenericLink \n                key={REF} \n                name={TITLE} \n                to={REF} \n                className={`nav-link ${active}`}\n            />\n            )\n    };\n  });\n\n  return (\n    <div>\n      <AppBar position=\"sticky\" className=\"nav-appbar\">\n        <Toolbar className=\"nav-toolbar\">\n          <Typography className=\"nav-title\">{TEXT.COMMON.TITLE}</Typography>\n          <span className=\"nav-rendered-links\">{renderedLinks}</span>\n          <IconButton onClick={handleMenuClick}>\n            <AccountCircleIcon />\n          </IconButton>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n            MenuListProps={{\n              'aria-labelledby': 'menu-button',\n            }}>\n            {isLoggedIn ? (\n              <MenuItem onClick={handleLogout}>{TEXT.COMMON.LOGOUT}</MenuItem>\n            ) : (\n              <MenuItem onClick={handleOpenLoginModal}>\n                {TEXT.COMMON.LOGIN}\n              </MenuItem>\n            )}\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import axios from 'axios'\nimport dotenv from 'dotenv'\n\ndotenv.config();\nconst baseURL = process.env.REACT_APP_API_URL;\n\nexport default class ProjectAPI {\n    static async getAllProjects(): Promise<any> {\n        try {\n            const response = await axios.get(\"/api/projects\", {\n                baseURL,\n            });\n            return response;\n        } catch (e) {\n            throw e;\n        }\n    }\n}\n","import type { BaseResponse } from './types'\nimport projectAPI from '../api/projectAPI'\nimport { Project } from '@entities/Project'\n\ninterface ProjectResponse extends BaseResponse {\n    data? : Project[]\n} \n\nexport const callGetAllProjectsAPI = async (): Promise<ProjectResponse> => {\n    try {\n        const res = await projectAPI.getAllProjects()\n        return res.data as ProjectResponse;\n    } catch (err: any) {\n        return err.response.data as BaseResponse;\n    }\n}\n","import React from 'react';\nimport { Snackbar, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAppDispatch, useAppSelector } from '@redux/hooks';\nimport { selectApp, appActions } from '@redux/slices/AppRedux';\nimport './AlertPopup.css';\n\nconst AlertPopup = () => {\n  const dispatch = useAppDispatch();\n  const { alert } = useAppSelector(selectApp);\n\n  const getIsOpen = () => alert !== null;\n\n  const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') return;\n\n    dispatch(appActions.setAlert(null));\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      key={alert}\n      open={getIsOpen()}\n      autoHideDuration={5000}\n      onClose={handleClose}\n      message={alert}\n      action={\n        <IconButton aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      }\n    />\n  );\n};\n\nexport default AlertPopup;\n","import React from \"react\";\n\ninterface TimelineProps {}\n\nconst Timeline: React.FC<TimelineProps> = (props) => {\n  return <div>This is a timeline</div>;\n};\n\nexport default Timeline;\n","import SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport \"./Card.css\";\n\ninterface CardProps {\n  title: string,\n  desc: string,\n}\n\nconst Card = ({ title, desc }: CardProps) => {\n  return (\n    <div className=\"card\">\n      <SettingsOutlinedIcon fontSize=\"large\" color=\"primary\" id=\"icon\" />\n      <h3 id=\"card-title\">{title}</h3>\n      <p id=\"card-desc\">{desc}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"@components/Card\";\nimport \"./Home.css\"\n\ninterface HomeProps {}\n\nconst Home: React.FC<HomeProps> = (props) => {\n  return (\n    <div>\n      <div>HI THIS IS THE LANDING PAGE</div>\n      <div className=\"card-container\">\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import ROUTES from \"./routes\";\nimport TEXT from \"./text\";\n\nconst PROJECT_NAV = [\n\t{\n\t\tTITLE: TEXT.PROJECT_NAV.PROJECT_DESCRIPTION,\n\t\tREF: ROUTES.PROJECT_DESCRIPTION\n\t},\n\t{\n\t\tTITLE: TEXT.PROJECT_NAV.JOIN_THE_TEAM,\n\t\tREF: ROUTES.JOIN_THE_TEAM\n\t},\n\t{\n\t\tTITLE: TEXT.PROJECT_NAV.RESOURCES,\n\t\tREF: ROUTES.RESOURCES\n\t},\n\t{\n\t\tTITLE: TEXT.PROJECT_NAV.TEAM,\n\t\tREF: ROUTES.TEAM\n\t},\n\t{\n\t\tTITLE: TEXT.PROJECT_NAV.CONTACT,\n\t\tREF: ROUTES.CONTACT\n\t}\n];\n\nexport default PROJECT_NAV;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Drawer, List, ListItem, ListItemText } from '@mui/material'; \n\ninterface ProjectNavbarParams {\n    isOpen: boolean;\n    links: { title: string, ref: string }[];\n}\n\nconst ProjectNavbar: React.FC<ProjectNavbarParams> = (props) => {\n\n    return (\n        <Drawer\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={props.isOpen}\n            PaperProps={{ style: { position: 'relative' } }}\n        >\n            <List>\n                {props.links.map((link, index) => (\n                    <ListItem button key={index} component={Link} to={link.ref}>\n                        <ListItemText primary={link.title}/>\n                    </ListItem>\n                ))}\n            </List>\n        </Drawer>\n    );\n}\n\nexport default ProjectNavbar;\n","import React from 'react'\nimport { RouteComponentProps, Switch, Route } from 'react-router';\nimport { useAppSelector } from '@redux/hooks';\nimport { selectProjects } from '@redux/slices/ProjectRedux';\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport ROUTES from '@statics/routes';\nimport { \nProjectDefault, \nProjectJoin,\nProjectResources,\nProjectTeam,\nProjectContact } from './'\nimport { Project } from '@entities/Project'\nimport PROJECT_NAV from '@statics/projectNav'\nimport ProjectNavbar from '@components/ProjectNavbar'\nimport \"./ProjectWrapper.css\"\n\ninterface MatchParams {\n    project_id: string;\n}\n\ninterface ProjectProps extends RouteComponentProps<MatchParams> {\n}\n\nconst ProjectWrapper: React.FC<ProjectProps> = ({match}) => {\n    const [ selected, setSelected ] = React.useState(true);\n    const expand = selected? 'expand' : '';\n\n    const projects = useAppSelector(selectProjects); \n\n    const curr_project: Project | undefined = projects.find(project => project.name === match.params.project_id)\n\n    if (!curr_project) {\n        return <div>Selected project does not exist</div>\n    }\n\n    let links: {title: string, ref: string}[] = PROJECT_NAV.map(project_nav => {\n        return {\n            title : project_nav.TITLE, \n            ref : ROUTES.PROJECT.BASE + \"/\" + curr_project.name + project_nav.REF\n            }\n    })\n\n    return (\n        <div className={\"project-page\"}>\n            <div className={[\"sidebar\", expand].join(' ')}>\n                <ProjectNavbar isOpen={selected} links={links}/>  \n            </div>\n            <div className=\"togglebutton\"> \n                <ToggleButton \n                    className=\"togglebutton\"\n                    value=\"check\"\n                    selected={selected}\n                    onChange={() => {\n                        setSelected(!selected);\n                    }}\n                > \n                {selected? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </ToggleButton>\n            </div>\n            <div className={\"content-container\"}>\n                <Switch>\n                    <Route exact path={match.url} render={() => <ProjectDefault project={curr_project}/>}/>\n                    <Route exact path={`${match.url}/join`} render={() => <ProjectJoin project={curr_project}/>}/>\n                    <Route exact path={`${match.url}/resources`} render={() => <ProjectResources project={curr_project}/>}/>\n                    <Route exact path={`${match.url}/team`} render={() => <ProjectTeam project={curr_project}/>}/>\n                    <Route exact path={`${match.url}/contact`} render={() => <ProjectContact project={curr_project}/>}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectWrapper\n","import React from 'react'\nimport { useAppSelector } from '@redux/hooks';\nimport { selectProjects } from '@redux/slices/ProjectRedux';\nimport GenericLink from '@components/generics/Link'\nimport { ROUTES } from '@statics';\n\nconst ProjectOverview = () => {\n    const projects = useAppSelector(selectProjects); \n\n    return (\n        <div>\n            <div>\n                All Projects\n            </div>\n            <div>\n                {projects.map((project, i) => {\n                    return (\n                        <li key={i}>\n                            <GenericLink name={project.name} \n                                        to={`${ROUTES.PROJECT.BASE}/${project.name}`}/>\n                        </li>\n                    )\n                })}\n            </div>\n        </div>\n           )\n}\n\nexport default ProjectOverview;\n\n","import React from 'react';\nimport Breadcrumbs from '@mui/material/Breadcrumbs'\nimport Link from '@mui/material/Link'\nimport Typography from '@mui/material/Typography'\nimport ROUTES from '@statics/routes'\n\ninterface ProjectBreadcrumbsParam {\n    project_name: string,\n    page_name: string\n}\n\nconst ProjectBreadcrumbs: React.FC<ProjectBreadcrumbsParam> = (props) => {\n    return (\n        <Breadcrumbs separator=\">\">\n            <Link href={ROUTES.PROJECT.BASE} underline=\"none\"> All Projects </Link>\n            <Link href={ROUTES.PROJECT.BASE + '/' + props.project_name} underline=\"none\"> {props.project_name} </Link>\n            <Typography> {props.page_name} </Typography>\n        </Breadcrumbs>\n    )    \n}\n\nexport default ProjectBreadcrumbs;\n","import React from 'react';\nimport { Project } from '@entities/Project'\nimport ProjectBreadcrumbs from '@components/ProjectBreadcrumbs'\nimport { TEXT } from '@statics'\n\ninterface ProjectProps {\n    project : Project,\n}\n\nconst ProjectDefault: React.FC<ProjectProps> = (props) => {\n    return (\n        <div>\n            <ProjectBreadcrumbs project_name={props.project.name} page_name={TEXT.PROJECT_NAV.PROJECT_DESCRIPTION} /> \n            main page for {props.project.name};\n        </div>\n    )\n};\n\nexport default ProjectDefault;\n","import React from 'react';\nimport { Project } from '@entities/Project'\nimport ProjectBreadcrumbs from '@components/ProjectBreadcrumbs'\nimport { TEXT } from '@statics'\n\ninterface ProjectProps {\n    project : Project,\n}\n\nconst ProjectJoin: React.FC<ProjectProps> = (props) => {\n    return (\n        <div>\n            <ProjectBreadcrumbs project_name={props.project.name} page_name={TEXT.PROJECT_NAV.JOIN_THE_TEAM} /> \n            join page for {props.project.name};\n        </div>\n    )\n};\n\nexport default ProjectJoin;\n","import React from 'react';\nimport { Project } from '@entities/Project'\nimport ProjectBreadcrumbs from '@components/ProjectBreadcrumbs'\nimport { TEXT } from '@statics'\n\ninterface ProjectProps {\n    project : Project,\n}\n\nconst ProjectDefault: React.FC<ProjectProps> = (props) => {\n    return (\n        <div>\n            <ProjectBreadcrumbs project_name={props.project.name} page_name={TEXT.PROJECT_NAV.RESOURCES} /> \n            resources page for {props.project.name};\n        </div>\n    )\n};\n\nexport default ProjectDefault;\n","import React from 'react';\nimport { Project } from '@entities/Project'\nimport ProjectBreadcrumbs from '@components/ProjectBreadcrumbs'\nimport { TEXT } from '@statics'\n\ninterface ProjectProps {\n    project : Project,\n}\n\nconst ProjectTeam: React.FC<ProjectProps> = (props) => {\n    return (\n        <div>\n            <ProjectBreadcrumbs project_name={props.project.name} page_name={TEXT.PROJECT_NAV.TEAM} /> \n            team page for {props.project.name};\n        </div>\n    )\n};\n\nexport default ProjectTeam;\n\n","import React from 'react';\nimport { Project } from '@entities/Project'\nimport ProjectBreadcrumbs from '@components/ProjectBreadcrumbs'\nimport { TEXT } from '@statics'\n\ninterface ProjectProps {\n    project : Project,\n}\n\nconst ProjectContact: React.FC<ProjectProps> = (props) => {\n    return (\n        <div>\n            <ProjectBreadcrumbs project_name={props.project.name} page_name={TEXT.PROJECT_NAV.CONTACT} /> \n            contact page for {props.project.name};\n        </div>\n    )\n};\n\nexport default ProjectContact;\n\n\n\n","import React from \"react\";\nimport Card from \"@components/Card\";\n\ninterface AboutProps {}\n\nconst About: React.FC<AboutProps> = (props) => {\n  return (\n    <div>\n      <div>This is the about page</div>\n      <div className=\"card-container\">\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n        <Card title=\"Card Title\" desc=\"Description of how the lab can help COGS students with this project\" />\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\ninterface ResourcesProps {};\n\nconst Resources: React.FC<ResourcesProps> = props => {\n\treturn (\n\t\t<div>\n\t\t\t<div>This is the resources page</div>\n\t\t</div>\n\t);\n};\n\nexport default Resources;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ROUTES from '@statics/routes';\nimport Timeline from '@pages/Timeline';\nimport Home from '@pages/Home';\nimport { ProjectWrapper, ProjectOverview } from '@pages/Project';\nimport About from '@pages/About';\nimport Resources from '@pages/Resources';\n\nconst AppSwitch = () => {\n  return (\n    <Switch>\n      <Route exact path={ROUTES.TIMELINE} component={Timeline} />\n      <Route path={ROUTES.PROJECT.PATH} component={ProjectWrapper} />\n      <Route exact path={ROUTES.PROJECT.BASE} component={ProjectOverview} />\n      <Route exact path={ROUTES.HOME} component={Home} />\n      <Route exact path={ROUTES.ABOUT} component={About} />\n      <Route exact path={ROUTES.RESOURCES} component={Resources} />\n    </Switch>\n  );\n}\n\nexport default AppSwitch;\n","import React from 'react';\nimport { useAppSelector, useAppDispatch } from '@redux/hooks';\nimport Modal from '@mui/material/Modal';\nimport {\n  ValidModalKey,\n  selectModal,\n  appActions,\n} from '@redux/slices/AppRedux';\nimport './Modal.css';\n\ninterface ModalWrapperProps {\n  modalKey: ValidModalKey;\n  name: string;\n  children: React.ReactElement<any>;\n  disableDefaultClose?: boolean;\n}\n\nexport interface ModalInjectedProps {\n  modalData?: Object;\n  handleClose: () => void;\n}\n\nconst ModalWrapper: React.FC<ModalWrapperProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const modal = useAppSelector(selectModal(props.modalKey));\n\n  const handleClose = () => {\n    dispatch(appActions.closeModal({ key: props.modalKey }));\n  };\n\n  const injectedProps: ModalInjectedProps = {\n    modalData: modal?.data,\n    handleClose,\n  };\n\n  return (\n    <Modal\n      open={modal?.visible}\n      className={`web-app-modal ${props.name}-modal`}\n      onClose={props.disableDefaultClose ? () => {} : handleClose}>\n        <div className='web-app-modal-content'>\n          {React.cloneElement(props.children, injectedProps)}\n        </div>\n    </Modal>\n  );\n};\n\nexport default ModalWrapper;\n","import { Button } from \"@mui/material\";\nimport classNames from \"classnames\";\nimport \"./Button.css\";\n\ninterface ButtonProps {\n  children?: React.ReactNode;\n  className?: string;\n  [rest: string]: any;\n}\n\nconst GenericButton: React.FC<ButtonProps> = (props) => {\n  const { className, children, ...rest } = props;\n\n  const classes = classNames(\"button-root\", className);\n\n  return (\n    <Button {...rest} className={classes}>\n      {children}\n    </Button>\n  );\n};\n\nexport default GenericButton;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport TextField from '@mui/material/TextField';\nimport * as yup from 'yup';\nimport Button from '@components/generics/Button';\nimport { TEXT } from '@statics';\nimport './LoginForm.css';\n\ninterface LoginFormProps {\n  onSubmit: (username: string, password: string) => void;\n  disabled?: boolean;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = (props) => {\n  const schema = React.useMemo(\n    () =>\n      yup.object({\n        username: yup\n          .string()\n          .required(TEXT.LOGIN.USERNAME_EMPTY_ERROR),\n\n        password: yup\n          .string()\n          .required(TEXT.LOGIN.PASSWORD_EMPTY_ERROR),\n      }),\n    []\n  );\n\n  const form = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      props.onSubmit(values.username, values.password);\n    },\n  });\n\n  return (\n    <form className=\"login-form-root\" onSubmit={form.handleSubmit}>\n      <TextField\n        name=\"username\"\n        label={TEXT.LOGIN.USERNAME}\n        variant=\"outlined\"\n        value={form.values.username}\n        onChange={form.handleChange}\n        onBlur={form.handleBlur}\n        error={Boolean(form.touched.username) && Boolean(form.errors.username)}\n        helperText={form.touched.username && form.errors.username}\n        className=\"login-form-field\"\n      />\n      <TextField\n        name=\"password\"\n        label={TEXT.LOGIN.PASSWORD}\n        variant=\"outlined\"\n        value={form.values.password}\n        onChange={form.handleChange}\n        onBlur={form.handleBlur}\n        error={Boolean(form.touched.password) && Boolean(form.errors.password)}\n        helperText={form.touched.password && form.errors.password}\n        type=\"password\"\n        className=\"login-form-field\"\n      />\n      <Button\n        variant=\"contained\"\n        disableElevation\n        type=\"submit\"\n        disabled={props.disabled}>\n        {TEXT.COMMON.SUBMIT}\n      </Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { selectIsLoggingIn } from '@redux/slices/AuthRedux';\nimport { useAppSelector } from '@redux/hooks';\nimport Modal, { ModalInjectedProps } from '@components/generics/Modal';\nimport { CONSTANTS, TEXT } from '@statics';\nimport { useHandleLogin } from '@services/authService';\nimport LoginForm from './LoginForm';\nimport './LoginView.css';\n\ntype LoginViewProps = Partial<ModalInjectedProps>;\n\nconst LoginView: React.FC<LoginViewProps> = (props) => {\n  const { handleClose } = props;\n  const isLoggingIn = useAppSelector(selectIsLoggingIn);\n\n  const { handleLogin, error, success } = useHandleLogin();\n\n  const handleUserLogin = (user: string, pwd: string) => handleLogin(user, pwd);\n\n  React.useEffect(() => {\n    if (success) {\n      handleClose && handleClose();\n    }\n  }, [handleClose, success]);\n\n  return (\n    <div className=\"login-view-root\">\n      <h3 className=\"login-view-title\">{TEXT.LOGIN.TITLE}</h3>\n      <LoginForm onSubmit={handleUserLogin} disabled={isLoggingIn} />\n      {error && <p className=\"login-error\">{`Error: ${error}`}</p>}\n    </div>\n  );\n};\n\nexport const LoginModal = () => {\n  return (\n    <Modal name=\"login\" modalKey={CONSTANTS.MODALS.LOGIN}>\n      <LoginView />\n    </Modal>\n  );\n};\n\nexport default LoginView;\n","import { LoginModal } from '@components/LoginView';\n\nconst Modals = () => {\n  return (\n    <>\n      <LoginModal />\n    </>\n  );\n};\n\nexport default Modals;","import React from 'react';\nimport {TEXT, NAV, ROUTES} from '@statics';\nimport GenericLink from '@components/generics/Link';\nimport './Footer.css'\n\nconst Footer = () => {\n    const projects = [{\n        name: \"Correlation\"\n    },\n        {\n            name: \"Nova\"\n        }, {\n            name: \"Perceptual Modes\"\n        }, {\n            name: \"IDEO\"\n        }, {\n            name: \"IT\"\n        }, {\n            name: \"Dormant\"\n        }]\n\n    return (\n\n        <div className=\"container\">\n            <div className=\"footer\">\n                <div className=\"footer-main\">\n                    <div className=\"footer-left\">\n                        <img src=\"images/ubc_logo.jpg\" className=\"ubc-logo\"/>\n\n                        <div className=\"footer-column-lab-info\">\n                            <li className=\"footer-link\"><b>Tel</b> {TEXT.LAB_INFO.TEL}</li>\n                            <li className=\"footer-link\"><b>Fax</b> {TEXT.LAB_INFO.FAX}</li>\n                            <li className=\"footer-link\"><b>Lab:</b> {TEXT.LAB_INFO.EMAIL}</li>\n                            <li className=\"footer-link\"><b>Dr. Rensink:</b> {TEXT.LAB_INFO.DRRENSINK_CONTACT}</li>\n                        </div>\n                    </div>\n                    <div className=\"footer-right\">\n                        <div className=\"footer-column-navigate\">\n                            <h3 className=\"footer-heading\"> {TEXT.PAGE_TITLES.NAVIGATE}</h3>\n                            {NAV.map(({TITLE, REF}) => {\n                                return (\n                                    <li className=\"footer-link\" key={REF}>\n                                        <GenericLink name={TITLE} to={REF}/>\n                                    </li>\n                                )\n                            })}\n                        </div>\n                        <div className=\"footer-column-projects\">\n                            <h3 className=\"footer-heading\"> {TEXT.PAGE_TITLES.PROJECTS}</h3>\n                            {projects.map((project, i) => {\n                                return (\n                                    <li className=\"footer-link\" key={i}>\n                                        <GenericLink\n                                            name={project.name}\n                                            to={`${ROUTES.PROJECT.BASE}/${project.name}`}\n                                        />\n                                    </li>\n                                )\n                            })}\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"horizontalLine\"></div>\n                <li className=\"campus-text\"><b>UBC Visual Cognition Lab</b> {TEXT.LAB_INFO.CAMPUS}</li>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navbar from '@components/Navbar';\nimport { useHandleCheckAuth } from '@services/authService';\nimport { useHandleGetAllProjects } from '@services/projectService'\nimport AlertPopup from '@components/AlertPopup';\nimport Switch from './Switch';\nimport Modals from './Modals';\nimport Footer from '@components/Footer'\nimport './App.css';\n\nfunction App() {\n  useHandleCheckAuth();\n  useHandleGetAllProjects();\n\n  return (\n    <div className=\"App\">\n        <Router>\n            <Navbar />\n            <Switch />\n            <Modals />\n            <AlertPopup />\n            <Footer />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect }from 'react';\nimport { useAppDispatch } from '@redux/hooks';\nimport { projectActions } from '@redux/slices/ProjectRedux';\nimport { appActions } from '@redux/slices/AppRedux';\nimport { callGetAllProjectsAPI } from '@services/adapters/projectAdapter'\n\nexport const useHandleGetAllProjects = () => {\n    const dispatch = useAppDispatch();\n    dispatch(projectActions.setIsProjectLoading(true));\n\n    const handleGetAllProjects = async () => {\n        callGetAllProjectsAPI()\n            .then((res) => {\n                if (res.data) {\n                    dispatch(projectActions.setProjects(res.data)) \n                } else {\n                    dispatch(appActions.setAlert(res.message));\n                }\n            })\n            .then(() => {\n                dispatch(projectActions.setIsProjectLoading(false))\n            })\n            .catch(() => {\n                console.error('Error: projectService.ts getAllProjects call')\n            })\n    }\n\n    useEffect(() => {\n        handleGetAllProjects();\n    }, []);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from '@redux/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}